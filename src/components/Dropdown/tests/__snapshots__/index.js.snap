// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Dropdown should highlight button class when style equals highlight 1`] = `
<withHandlers(withState(Dropdown))
  arrowIcon="none"
  buttonContent="Dropdown"
  icon={true}
  isOpen={false}
  style="highlight"
  toggle={[Function]}
>
  <ul>
    <li
      key="0"
    >
      Manual
    </li>
    <li
      key="1"
    >
      Maximize Conventions
    </li>
    <li
      key="2"
    >
      Faster Results
    </li>
  </ul>
</withHandlers(withState(Dropdown))>
`;

exports[`components/Dropdown should include oui-form-bad-news class when display error is true 1`] = `
<withHandlers(withState(Dropdown))
  arrowIcon="none"
  buttonContent="Dropdown"
  displayError={true}
  isOpen={false}
  toggle={[Function]}
/>
`;

exports[`components/Dropdown should not render children or Popper when isDisabled is true 1`] = `
<withState(withHandlers(withState(Dropdown)))
  arrowIcon="none"
  buttonContent="Dropdown"
  icon={true}
  idDisabled={true}
>
  <withHandlers(withState(Dropdown))
    arrowIcon="none"
    buttonContent="Dropdown"
    icon={true}
    idDisabled={true}
    isOpen={false}
    toggle={[Function]}
  >
    <withState(Dropdown)
      arrowIcon="none"
      buttonContent="Dropdown"
      hide={[Function]}
      icon={true}
      idDisabled={true}
      isOpen={false}
      show={[Function]}
      toggle={[Function]}
    >
      <Dropdown
        arrowIcon="none"
        buttonContent="Dropdown"
        hide={[Function]}
        icon={true}
        idDisabled={true}
        isOpen={false}
        overChildren={false}
        setOverChildren={[Function]}
        show={[Function]}
        toggle={[Function]}
      >
        <Manager
          className="oui-dropdown-group"
          data-ui-component={true}
          tag="div"
        >
          <div
            className="oui-dropdown-group"
            data-ui-component={true}
          >
            <Target>
              <div>
                <button
                  className="oui-button"
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  type="button"
                >
                  <div
                    className="flex flex-align--center"
                  >
                    <div
                      className="flex--1 truncate"
                    >
                      Dropdown
                    </div>
                  </div>
                </button>
              </div>
            </Target>
          </div>
        </Manager>
      </Dropdown>
    </withState(Dropdown)>
  </withHandlers(withState(Dropdown))>
</withState(withHandlers(withState(Dropdown)))>
`;

exports[`components/Dropdown should not use .oui-arrow-inline--down when icon isEqual to triangle 1`] = `
<withHandlers(withState(Dropdown))
  arrowIcon="none"
  buttonContent="Dropdown"
  icon={true}
  isOpen={false}
  toggle={[Function]}
>
  <ul>
    <li
      key="0"
    >
      Manual
    </li>
    <li
      key="1"
    >
      Maximize Conventions
    </li>
    <li
      key="2"
    >
      Faster Results
    </li>
  </ul>
</withHandlers(withState(Dropdown))>
`;

exports[`components/Dropdown should render an activator node when passed as a prop 1`] = `
<withHandlers(withState(Dropdown))
  activator={
    <button>
      Click me
    </button>
  }
  arrowIcon="none"
  displayError={true}
  isOpen={false}
  toggle={[Function]}
/>
`;

exports[`components/Dropdown should use oui-button--full class when fullWidth is true 1`] = `
<withHandlers(withState(Dropdown))
  arrowIcon="none"
  buttonContent="Dropdown"
  fullWidth={true}
  icon={true}
  isOpen={false}
  toggle={[Function]}
>
  <ul>
    <li
      key="0"
    >
      Manual
    </li>
    <li
      key="1"
    >
      Maximize Conventions
    </li>
    <li
      key="2"
    >
      Faster Results
    </li>
  </ul>
</withHandlers(withState(Dropdown))>
`;
